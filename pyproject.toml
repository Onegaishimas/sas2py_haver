[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "federal-reserve-etl"
version = "1.0.0"
description = "Production-ready ETL pipeline for Federal Reserve economic data with comprehensive error handling"
authors = [
    {name = "Federal Reserve ETL Team", email = "noreply@example.com"}
]
maintainers = [
    {name = "Federal Reserve ETL Team", email = "noreply@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"

keywords = [
    "federal-reserve", "fred", "haver-analytics", "economic-data", 
    "etl", "data-pipeline", "finance", "economics", "api-client",
    "data-extraction", "financial-data", "time-series", "production-ready"
]

classifiers = [
    # Development Status
    "Development Status :: 5 - Production/Stable",
    
    # Intended Audience  
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    
    # License
    "License :: OSI Approved :: MIT License",
    
    # Operating Systems
    "Operating System :: OS Independent", 
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    
    # Programming Language
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    
    # Topics
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database :: Front-Ends",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    
    # Framework
    "Framework :: Jupyter",
]

dependencies = [
    "pandas>=2.0.0",
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0", 
    "freezegun>=1.2.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "ipdb>=0.13.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
]

docs = [
    "sphinx>=5.0.0", 
    "sphinx-rtd-theme>=1.2.0",
    "sphinxcontrib-napoleon>=0.7",
    "myst-parser>=1.0.0",
]

jupyter = [
    "jupyter>=1.0.0",
    "notebook>=6.5.0", 
    "ipykernel>=6.20.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "plotly>=5.12.0",
]

[project.urls]
"Homepage" = "https://github.com/user/federal-reserve-etl"
"Documentation" = "https://github.com/user/federal-reserve-etl/docs"
"Repository" = "https://github.com/user/federal-reserve-etl"
"Bug Reports" = "https://github.com/user/federal-reserve-etl/issues"
"API Reference" = "https://github.com/user/federal-reserve-etl/docs/API_REFERENCE.md"
"Troubleshooting" = "https://github.com/user/federal-reserve-etl/docs/TROUBLESHOOTING.md"

[project.scripts]
federal-reserve-etl = "federal_reserve_etl.cli:main"
extract-fed-data = "federal_reserve_etl.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
federal_reserve_etl = [
    "data/*.json",
    "data/*.csv", 
    "config/*.yaml",
    "config/*.ini",
]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "network: Tests requiring network access",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/federal_reserve_etl"]
omit = [
    "*/tests/*", 
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]

# Black code formatting
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["federal_reserve_etl"]
known_third_party = ["pandas", "requests", "pytest"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Flake8 linting (configuration in setup.cfg for compatibility)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101,S106",
]